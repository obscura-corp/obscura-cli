name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

env:
  BIN_NAME: obscura

jobs:
  linux:
    name: Build Linux (x86_64)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu
      - name: Build (x86_64-unknown-linux-gnu)
        run: cargo build --release --target x86_64-unknown-linux-gnu
      - name: Strip (x86_64)
        run: strip target/x86_64-unknown-linux-gnu/release/${{ env.BIN_NAME }} || true
      - name: Package (tar.gz)
        run: |
          mkdir -p dist
          cp target/x86_64-unknown-linux-gnu/release/${{ env.BIN_NAME }} dist/${{ env.BIN_NAME }}
          tar -C dist -czf obscura-linux-x86_64.tar.gz ${{ env.BIN_NAME }}
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifact
          path: obscura-linux-x86_64.tar.gz
          if-no-files-found: error

  macos:
    name: Build macOS (x86_64 + arm64)
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Build (${{ matrix.target }})
        run: cargo build --release --target ${{ matrix.target }}
      - name: Strip (${{ matrix.target }})
        run: strip target/${{ matrix.target }}/release/${{ env.BIN_NAME }} || true
      - name: Package (tar.gz)
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/${{ env.BIN_NAME }} dist/${{ env.BIN_NAME }}
          if [[ "${{ matrix.target }}" == "x86_64-apple-darwin" ]]; then
            tar -C dist -czf obscura-macos-x86_64.tar.gz ${{ env.BIN_NAME }}
          else
            tar -C dist -czf obscura-macos-aarch64.tar.gz ${{ env.BIN_NAME }}
          fi
      - name: Upload macOS artifact (${{ matrix.target }})
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.target }}-artifact
          path: obscura-macos-*.tar.gz
          if-no-files-found: error

  windows:
    name: Build Windows (x86_64 MSVC)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc
      - name: Build (x86_64-pc-windows-msvc)
        run: cargo build --release --target x86_64-pc-windows-msvc
      - name: Package (zip)
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path dist | Out-Null
          Copy-Item "target/x86_64-pc-windows-msvc/release/${{ env.BIN_NAME }}.exe" "dist/${{ env.BIN_NAME }}.exe"
          Compress-Archive -Path "dist/${{ env.BIN_NAME }}.exe" -DestinationPath "obscura-windows-x86_64.zip" -Force
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifact
          path: obscura-windows-x86_64.zip
          if-no-files-found: error

  release:
    name: Create GitHub Release
    needs: [linux, macos, windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # ✅ Explicit download paths so files aren’t scattered in CWD
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-artifact
          path: ./artifacts/linux

      - name: Download macOS x86_64 artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-x86_64-apple-darwin-artifact
          path: ./artifacts/macos-x86_64

      - name: Download macOS aarch64 artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-aarch64-apple-darwin-artifact
          path: ./artifacts/macos-aarch64

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-artifact
          path: ./artifacts/windows

      - name: Collect artifacts into ./release
        run: |
          mkdir -p release
          cp artifacts/linux/obscura-linux-x86_64.tar.gz         release/
          cp artifacts/macos-x86_64/obscura-macos-x86_64.tar.gz   release/
          cp artifacts/macos-aarch64/obscura-macos-aarch64.tar.gz release/
          cp artifacts/windows/obscura-windows-x86_64.zip         release/
          ls -l release

      - name: Generate SHA256SUMS
        run: |
          cd release
          sha256sum obscura-*.tar.gz obscura-*.zip > SHA256SUMS
          cat SHA256SUMS

      - name: Create/Update Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/obscura-linux-x86_64.tar.gz
            release/obscura-macos-x86_64.tar.gz
            release/obscura-macos-aarch64.tar.gz
            release/obscura-windows-x86_64.zip
            release/SHA256SUMS
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
